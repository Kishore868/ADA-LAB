struct ListNode* modifiedList(int* nums, int numsSize, struct ListNode* head) {
    struct ListNode *temp = head;
    struct ListNode *prev = NULL;

    // Create a set for fast lookup of values to delete
    int deleteValues[10000000] = {0};  // assuming numsSize won't exceed 1000 for simplicity
    for (int i = 0; i < numsSize; i++) {
        deleteValues[nums[i]] = 1;
    }

    // Traverse the linked list
    while (temp != NULL) {
        if (deleteValues[temp->val]) {
            // Delete the current node
            if (prev == NULL) {
                // We're at the head of the list
                struct ListNode *toDelete = temp;
                temp = temp->next;
                free(toDelete); // Free the node
                head = temp;  // Move head to the next node
            } else {
                // We are not at the head
                prev->next = temp->next;
                free(temp); // Free the node
                temp = prev->next; // Move temp to the next node
            }
        } else {
            // If not deleting, move to the next node
            prev = temp;
            temp = temp->next;
        }
    }

    return head;
}
